

// Media query mixin
@mixin media-query ($break) {
	@if $break == "x-small" {
		@media (min-width: $brkpoint-xs) {
			@content;
		}
	}
	@else if $break == "small" {
		@media (min-width: $brkpoint-sm)  {
			@content;
		}
	}
	@else if $break == "medium" {
		@media (min-width: $brkpoint-md) {
			@content;
		}
	}
    @else if $break == "large" {
		@media (min-width: $brkpoint-lg) {
			@content;
		}
	}
	@else if $break == "x-large" {
		@media (min-width: $brkpoint-xl) {
			@content;
		}
	}
	@else {
		@error "Error: No value could be retrieved from argument $break: '#{$break}'";
	}
}

@mixin button-styles ($color) {
	outline: none;
	border: 1px solid $color;
	border-radius: em(5px);
	background-color: darken($color, 40%);

	padding-right: em(10px);
    padding-left: em(10px);

	&:hover {
		background-color: $color;
		box-shadow: 0 0 8px $color;
	}
}

@mixin input-msg-styles () {
	color: $errorRed;
    margin-top: em(7px);
    height: em(45px);

    @include media-query (x-small) {
        height: em(25px);
    }
}

@mixin input-wrapper-styles () {
	display: flex;
	flex-direction: column;
	text-align: center;
	padding: em(20px);
}

@mixin input-title-styles ($color: $aqua) {
	color: $color;
	margin-bottom: em(20px);
}

@mixin input-field-styles ($color: $aqua) {
	outline: none;
	border: em(1px) solid $color;
	border-radius: em(5px);
	padding: em(5px);
	background-color: darken($color, 40%);
	text-align: center;

	&:focus {
		background-color: darken($color, 10%);
		box-shadow: 0 0 8px $color;
	}

	@include media-query (small) {
		text-align: left;
	}
}

@mixin input-label-styles () {
	font-size: em(25px);
	margin-bottom: em(5px);

	@include media-query (small) {
		text-align: left;
	}
}